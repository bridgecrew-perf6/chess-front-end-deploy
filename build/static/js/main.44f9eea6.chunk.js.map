{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","color","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","current","winner","console","log","getData","status","moves","map","move","desc","jumpTo","handleClick","a","fetch","response","json","data","error","lines","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44f9eea6.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n\t\t<FaStar color=\"red\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    console.log(\"getting data\");\r\n    getData();\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player mod: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        <div className=\"additional\">\r\n          <p>an additional paragraph</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nasync function getData() {\r\n  try {\r\n    const response = await fetch(\r\n      'https://mw-chess-game.herokuapp.com/data'\r\n    );\r\n    const data = await response.json();\r\n    console.log(\"data: \", data);\r\n  } catch(error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}